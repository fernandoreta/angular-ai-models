import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';
import { pipeline, env } from '@xenova/transformers';
import { take } from 'rxjs';
import { IModels } from 'src/interfaces/models.interface';
import { ModelService } from 'src/services/model.service';
import { DialogAnimationsComponent } from './dialog-animations/dialog-animations.component';
import { MatDialog } from '@angular/material/dialog';
import { animate, style, transition, trigger } from '@angular/animations';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss'],
  animations: [
    trigger('fadeInOut', [
      transition(':enter', [
        style({ opacity: 0 }),
        animate('300ms ease-in', style({ opacity: 1 })),
      ]),
      transition(':leave', [
        animate('300ms ease-out', style({ opacity: 0 })),
      ]),
    ]),
  ],
})
export class AppComponent {
  @ViewChild('imageContainer', { static: false }) imageContainer!: ElementRef;
  title = 'InstaRead';

  constructor(
    private modelService: ModelService,
    private dialog: MatDialog
  ) {}
  
  //Image to text.
  imagePath = 'assets/example.jpg';
  extractedText: string = '';

  models: IModels[] = [
    { title: 'üå† Image to Text', action: () => this.openDialog('300ms', '300ms') },
    { title: 'üìí Resume', action: () => this.resume() },
    { title: 'üôãüèΩ Questions', action: () => {} },
    { title: 'üéôÔ∏è Text to Audio', action: () => {} },
    { title: 'üñãÔ∏è Get your Highlight Text', action: () => {} }
  ];

  footers: IModels[] = [
    { title: 'üìö Books', action: () => {} },
    { title: 'üîñ Articles', action: () => {} },
    { title: 'üîç Search', action: () => {} },
    { title: 'ü™™ Profile', action: () => {} },
  ];

  openDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {
    this.dialog.open(DialogAnimationsComponent, {
      width: '600px',
      enterAnimationDuration,
      exitAnimationDuration
    });
  }
  
  //Resume
  // https://huggingface.co/tasks/summarization
  private summarization: any;
  text = `La revoluci√≥n de la inteligencia artificial en la medicina
En los √∫ltimos a√±os, la inteligencia artificial (IA) ha transformado el sector de la salud, proporcionando herramientas innovadoras para el diagn√≥stico, el tratamiento y la gesti√≥n de pacientes. Los algoritmos avanzados, como el aprendizaje autom√°tico y el aprendizaje profundo, permiten analizar grandes vol√∫menes de datos m√©dicos con una precisi√≥n sin precedentes. Por ejemplo, sistemas basados en IA pueden detectar anomal√≠as en radiograf√≠as con una precisi√≥n similar o incluso superior a la de los m√©dicos experimentados.

Adem√°s, las aplicaciones de IA en la medicina no se limitan al diagn√≥stico. Tambi√©n est√°n revolucionando la investigaci√≥n farmac√©utica al identificar posibles compuestos para nuevos medicamentos de manera m√°s eficiente. En el campo de la atenci√≥n personalizada, los sistemas de IA pueden recomendar tratamientos adaptados a las caracter√≠sticas espec√≠ficas de cada paciente, mejorando los resultados cl√≠nicos.

Sin embargo, el uso de la IA en la salud plantea desaf√≠os importantes, como la privacidad de los datos, la regulaci√≥n y la necesidad de garantizar que estas herramientas se utilicen de manera √©tica. A medida que la tecnolog√≠a avanza, la colaboraci√≥n entre expertos en tecnolog√≠a, m√©dicos y legisladores ser√° crucial para maximizar los beneficios de la IA y minimizar sus riesgos.`;
  resumeText = '';

  async loadSummarization() {
    this.summarization = await pipeline('summarization', 'Xenova/distilbart-cnn-6-6');
  }

  async resume() {
    console.log('Loading model üí≠');
    await this.loadSummarization();
    console.log('Model charged!üöÄ');
    console.log('Resuming ü§î');
    const res = await this.summarization(this.text);
    this.resumeText = res[0].summary_text;
    console.log(res[0].summary_text);
    console.log('Resume Complete!üìù');
  }
}
